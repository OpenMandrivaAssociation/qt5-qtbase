From 9022eab63a1df149afc642c0eea03f6e548330b2 Mon Sep 17 00:00:00 2001
From: Fabian Kosmale <fabian.kosmale@qt.io>
Date: Tue, 3 Nov 2020 11:41:06 +0100
Subject: [PATCH 034/171] moc: Handle include in enum, take 2

The existing logic broke down when we reentered the enumerator parsing
loop, and encountered a INCLUDE_MOC_END token in the first handleInclude
call. Fix this by restarting the loop in that case.
Amends d8a2456fbf18f60e2d1950585d93aa530df077bf.

Fixes: QTBUG-88125
Change-Id: I87acaa986a81de53730eddc40bc7d48c15328aba
Reviewed-by: Lars Knoll <lars.knoll@qt.io>
(cherry picked from commit d3ed7dac8aa2f4ede0c409254b9dd44842086be0)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
---
 src/tools/moc/moc.cpp           | 22 +++++++++++++++++++---
 tests/auto/tools/moc/enum_inc.h |  3 ++-
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/src/tools/moc/moc.cpp b/src/tools/moc/moc.cpp
index edc72f0869..7389919911 100644
--- a/src/tools/moc/moc.cpp
+++ b/src/tools/moc/moc.cpp
@@ -261,6 +261,12 @@ Type Moc::parseType()
     return type;
 }
 
+enum class IncludeState {
+    IncludeBegin,
+    IncludeEnd,
+    NoInclude,
+};
+
 bool Moc::parseEnum(EnumDef *def)
 {
     bool isTypdefEnum = false; // typedef enum { ... } Foo;
@@ -281,18 +287,28 @@ bool Moc::parseEnum(EnumDef *def)
     }
     if (!test(LBRACE))
         return false;
-    auto handleInclude = [this]() {
-        if (test(MOC_INCLUDE_BEGIN))
+    auto handleInclude = [this]() -> IncludeState  {
+        bool hadIncludeBegin = false;
+        if (test(MOC_INCLUDE_BEGIN)) {
             currentFilenames.push(symbol().unquotedLexem());
+            // we do not return early to handle empty headers in one go
+            hadIncludeBegin = true;
+        }
         if (test(NOTOKEN)) {
             next(MOC_INCLUDE_END);
             currentFilenames.pop();
+            return IncludeState::IncludeEnd;
         }
+        if (hadIncludeBegin)
+            return IncludeState::IncludeBegin;
+        else
+            return IncludeState::NoInclude;
     };
     do {
         if (lookup() == RBRACE) // accept trailing comma
             break;
-        handleInclude();
+        if ( handleInclude() == IncludeState::IncludeEnd)
+            continue;
         next(IDENTIFIER);
         def->values += lexem();
         handleInclude();
diff --git a/tests/auto/tools/moc/enum_inc.h b/tests/auto/tools/moc/enum_inc.h
index 32eec283e4..7d7b6ae9f3 100644
--- a/tests/auto/tools/moc/enum_inc.h
+++ b/tests/auto/tools/moc/enum_inc.h
@@ -1 +1,2 @@
-parcel
+parcel = 42,
+part = 12,
-- 
2.31.1

