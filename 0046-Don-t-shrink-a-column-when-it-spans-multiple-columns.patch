From 65e1f6cdf7e510380e6c25a7d55a52d1e3b2fc88 Mon Sep 17 00:00:00 2001
From: Volker Hilsheimer <volker.hilsheimer@qt.io>
Date: Wed, 24 Nov 2021 19:14:26 +0100
Subject: [PATCH 046/163] Don't shrink a column when it spans multiple columns

If a cell spans multiple columns, then the merged cells' starting
column's maximum width should never become smaller than what was
calculated from previous rows.

Otherwise, we'd distribute the space of the column that has a span
across all merged columns, resulting in unnecessary line breaks esp if
WrapAnywhere is enabled.

Add a test case.

Fixes: QTBUG-91691
Fixes: QTBUG-95240
Pick-to: 6.2 5.15
Change-Id: Ic27dbdb128071e50fba049de85c9f23ba2f059b3
Reviewed-by: Eirik Aavitsland <eirik.aavitsland@qt.io>
(cherry picked from commit 9538c7ca73e75ab8219e43b36b49200f27164dbb)
---
 src/gui/text/qtextdocumentlayout.cpp          |  2 ++
 .../gui/text/qtexttable/tst_qtexttable.cpp    | 28 +++++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/src/gui/text/qtextdocumentlayout.cpp b/src/gui/text/qtextdocumentlayout.cpp
index ba72e26c3f..9160ae04c2 100644
--- a/src/gui/text/qtextdocumentlayout.cpp
+++ b/src/gui/text/qtextdocumentlayout.cpp
@@ -2540,6 +2540,8 @@ recalc_minmax_widths:
             for (int n = 0; n < cspan; ++n) {
                 const int col = i + n;
                 QFixed w = widthToDistribute / (cspan - n);
+                if (td->maxWidths[col] != QFIXED_MAX)
+                    w = qMax(td->maxWidths[col], w);
                 td->maxWidths[col] = qMax(td->minWidths.at(col), w);
                 widthToDistribute -= td->maxWidths.at(col);
                 if (widthToDistribute <= 0)
diff --git a/tests/auto/gui/text/qtexttable/tst_qtexttable.cpp b/tests/auto/gui/text/qtexttable/tst_qtexttable.cpp
index 474079037b..b7baf720b3 100644
--- a/tests/auto/gui/text/qtexttable/tst_qtexttable.cpp
+++ b/tests/auto/gui/text/qtexttable/tst_qtexttable.cpp
@@ -44,6 +44,7 @@
 #include <QPainter>
 #include <QPaintEngine>
 #endif
+#include <private/qtextdocumentlayout_p.h>
 #include <private/qpagedpaintdevice_p.h>
 
 typedef QList<int> IntList;
@@ -100,6 +101,10 @@ private slots:
     void checkBorderAttributes_data();
     void checkBorderAttributes();
 
+#ifndef QT_NO_WIDGETS
+    void columnWidthWithSpans();
+#endif
+
 private:
     QTextTable *create2x2Table();
     QTextTable *create4x4Table();
@@ -1278,5 +1283,28 @@ void tst_QTextTable::checkBorderAttributes()
     }
 }
 
+#ifndef QT_NO_WIDGETS
+void tst_QTextTable::columnWidthWithSpans()
+{
+    cleanup();
+    init();
+    QTextTable *table = cursor.insertTable(4, 4);
+    QTextEdit textEdit;
+    textEdit.setDocument(doc);
+    textEdit.show();
+    QVERIFY(QTest::qWaitForWindowExposed(&textEdit));
+
+    for (int i = 0; i < table->columns(); ++i)
+        table->cellAt(0, i).firstCursorPosition().insertText(QString("Header %1").arg(i));
+
+    QTextBlock block = table->cellAt(0, 0).firstCursorPosition().block();
+    const QRectF beforeRect = table->document()->documentLayout()->blockBoundingRect(block);
+    table->mergeCells(1, 0, 1, table->columns());
+    block = table->cellAt(0, 0).firstCursorPosition().block();
+    const QRectF afterRect = table->document()->documentLayout()->blockBoundingRect(block);
+    QCOMPARE(afterRect, beforeRect);
+}
+#endif
+
 QTEST_MAIN(tst_QTextTable)
 #include "tst_qtexttable.moc"
-- 
2.37.2

