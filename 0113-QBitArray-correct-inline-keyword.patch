From 7383ffaecfc1d18cff8532c59ad6e7a598fbc6a6 Mon Sep 17 00:00:00 2001
From: Marc Mutz <marc.mutz@qt.io>
Date: Mon, 29 Jan 2024 10:33:14 +0100
Subject: [PATCH 113/127] QBitArray: correct inline keyword

The mutable operator[] method was marked as inline only at the
definition, not the declaration. This is known to cause compilation
failures on MinGW when the function is used in other inline
implementation (cf. e.g. QTBUG-56459). It's not, atm, but fix the
issue proactively.

Pick-to: 6.7 6.6 6.5 6.2 5.15
Change-Id: If805122d9f8dbd72641173509c4b860c20fc1cdc
Reviewed-by: Fabian Kosmale <fabian.kosmale@qt.io>
(cherry picked from commit 7310d2bd5562d1a88b69a544ab9b88c13cc3f978)
---
 src/corelib/tools/qbitarray.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/corelib/tools/qbitarray.h b/src/corelib/tools/qbitarray.h
index eaed17413d..7934b55164 100644
--- a/src/corelib/tools/qbitarray.h
+++ b/src/corelib/tools/qbitarray.h
@@ -84,9 +84,9 @@ public:
     bool toggleBit(int i);
 
     bool at(int i) const;
-    QBitRef operator[](int i);
+    inline QBitRef operator[](int i);
     bool operator[](int i) const;
-    QBitRef operator[](uint i);
+    inline QBitRef operator[](uint i);
     bool operator[](uint i) const;
 
     QBitArray& operator&=(const QBitArray &);
@@ -156,9 +156,9 @@ public:
     QBitRef& operator=(bool val) { a.setBit(i, val); return *this; }
 };
 
-inline QBitRef QBitArray::operator[](int i)
+QBitRef QBitArray::operator[](int i)
 { Q_ASSERT(i >= 0); return QBitRef(*this, i); }
-inline QBitRef QBitArray::operator[](uint i)
+QBitRef QBitArray::operator[](uint i)
 { return QBitRef(*this, i); }
 
 
-- 
2.46.0

