From a67cec60bb291bc9af60f162856c4d3716ff4e7f Mon Sep 17 00:00:00 2001
From: Nikolay Avtomonov <n.avtomonov@readyforsky.com>
Date: Tue, 2 Oct 2018 17:40:29 +0300
Subject: [PATCH 055/132] Explicitly set output files for qtpreprocess
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This fixes build error with XCode 10.
XCode 10 build system (a.k.a "New Build System") requires all the files
that are generated by scripts and used later on build to be explicitly
defined as output files.

Task-number: QTBUG-71035
Change-Id: Ibec39eee53b0cb3acecf592f1ca53c04b9975cad
Reviewed-by: Tor Arne Vestb√∏ <tor.arne.vestbo@qt.io>
(cherry picked from commit 3f0858ed10d249acb942597b4065080411281b87)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>


(cherry picked from commit 68af1067aceb05fce8049d9f79fdac5344147f4e)
---
 qmake/generators/mac/pbuilder_pbx.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/qmake/generators/mac/pbuilder_pbx.cpp b/qmake/generators/mac/pbuilder_pbx.cpp
index c2f6df7787..25cca16243 100644
--- a/qmake/generators/mac/pbuilder_pbx.cpp
+++ b/qmake/generators/mac/pbuilder_pbx.cpp
@@ -778,6 +778,7 @@ ProjectBuilderMakefileGenerator::writeMakeParts(QTextStream &t)
     {
         QString mkfile = pbx_dir + Option::dir_sep + "qt_preprocess.mak";
         QFile mkf(mkfile);
+        ProStringList outputPaths;
         if(mkf.open(QIODevice::WriteOnly | QIODevice::Text)) {
             writingUnixMakefileGenerator = true;
             debug_msg(1, "pbuilder: Creating file: %s", mkfile.toLatin1().constData());
@@ -827,8 +828,10 @@ ProjectBuilderMakefileGenerator::writeMakeParts(QTextStream &t)
                             ++added;
                             const QString file_name = fileFixify(fn, FileFixifyFromOutdir);
                             const QString tmpOut = fileFixify(tmp_out.first().toQString(), FileFixifyFromOutdir);
-                            mkt << ' ' << escapeDependencyPath(Option::fixPathToTargetOS(
+                            QString path = escapeDependencyPath(Option::fixPathToTargetOS(
                                     replaceExtraCompilerVariables(tmpOut, file_name, QString(), NoShell)));
+                            mkt << ' ' << path;
+                            outputPaths << path;
                         }
                     }
                 }
@@ -839,6 +842,8 @@ ProjectBuilderMakefileGenerator::writeMakeParts(QTextStream &t)
             mkt.flush();
             mkf.close();
         }
+        // Remove duplicates from build steps with "combine"
+        outputPaths.removeDuplicates();
         mkfile = fileFixify(mkfile);
         QString phase_key = keyFor("QMAKE_PBX_PREPROCESS_TARGET");
 //        project->values("QMAKE_PBX_BUILDPHASES").append(phase_key);
@@ -849,6 +854,7 @@ ProjectBuilderMakefileGenerator::writeMakeParts(QTextStream &t)
           << "\t\t\t" << writeSettings("isa", "PBXShellScriptBuildPhase", SettingsNoQuote) << ";\n"
           << "\t\t\t" << writeSettings("runOnlyForDeploymentPostprocessing", "0", SettingsNoQuote) << ";\n"
           << "\t\t\t" << writeSettings("name", "Qt Preprocessors") << ";\n"
+          << "\t\t\t" << writeSettings("outputPaths", outputPaths, SettingsAsList, 4) << ";\n"
           << "\t\t\t" << writeSettings("shellPath", "/bin/sh") << ";\n"
           << "\t\t\t" << writeSettings("shellScript", "make -C " + IoUtils::shellQuoteUnix(Option::output_dir)
                                                       + " -f " + IoUtils::shellQuoteUnix(mkfile)) << ";\n"
-- 
2.35.1

