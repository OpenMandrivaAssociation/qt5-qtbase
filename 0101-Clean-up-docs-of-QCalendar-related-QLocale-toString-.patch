From c0b77bcd431d8232904e58199be2a8962d625c9b Mon Sep 17 00:00:00 2001
From: Edward Welbourne <edward.welbourne@qt.io>
Date: Mon, 9 Nov 2020 16:49:06 +0100
Subject: [PATCH 101/171] Clean up docs of QCalendar-related
 QLocale::toString() variants
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Some of the new functions were added without documentation, or without
updating the docs to mention the optional calendars. Shuffle the
methods so that the one with calendar is what the primary
documentation comment describes and the one without is documented as
an overload.

Change-Id: Iee4cdb1d3b0ed21a50e205a5275a0695a2667550
Reviewed-by: Paul Wicking <paul.wicking@qt.io>
Reviewed-by: MÃ¥rten Nordheim <marten.nordheim@qt.io>
(cherry picked from commit f884689d044f03f0e0b9b8fd98b3d1405131ab7c)
Reviewed-by: Edward Welbourne <edward.welbourne@qt.io>
---
 src/corelib/text/qlocale.cpp | 101 ++++++++++++++++++++---------------
 src/corelib/text/qlocale.h   |   7 +--
 2 files changed, 63 insertions(+), 45 deletions(-)

diff --git a/src/corelib/text/qlocale.cpp b/src/corelib/text/qlocale.cpp
index bfd7b15e6b..dc73a78bb4 100644
--- a/src/corelib/text/qlocale.cpp
+++ b/src/corelib/text/qlocale.cpp
@@ -2042,27 +2042,62 @@ QString QLocale::toString(const QDate &date, const QString &format) const
 #endif
 
 /*!
-    \since 5.10
+    \since 5.14
 
     Returns a localized string representation of the given \a date in the
-    specified \a format.
+    specified \a format, optionally for a specified calendar \a cal.
     If \a format is an empty string, an empty string is returned.
 
     \sa QDate::toString()
 */
+QString QLocale::toString(const QDate &date, QStringView format, QCalendar cal) const
+{
+    return cal.dateTimeToString(format, QDateTime(), date, QTime(), *this);
+}
+
+/*!
+    \since 5.10
+    \overload
+*/
 QString QLocale::toString(const QDate &date, QStringView format) const
 {
     return QCalendar().dateTimeToString(format, QDateTime(), date, QTime(), *this);
 }
 
 /*!
+    \since 5.14
+
     Returns a localized string representation of the given \a date according
-    to the specified \a format (see dateFormat()).
+    to the specified \a format (see dateFormat()), optionally for a specified
+    calendar \a cal.
 
     \note Some locales may use formats that limit the range of years they can
     represent.
 */
+QString QLocale::toString(const QDate &date, FormatType format, QCalendar cal) const
+{
+    if (!date.isValid())
+        return QString();
+
+#ifndef QT_NO_SYSTEMLOCALE
+    if (cal.isGregorian() && d->m_data == systemData()) {
+        QVariant res = systemLocale()->query(format == LongFormat
+                                             ? QSystemLocale::DateToStringLong
+                                             : QSystemLocale::DateToStringShort,
+                                             date);
+        if (!res.isNull())
+            return res.toString();
+    }
+#endif
 
+    QString format_str = dateFormat(format);
+    return toString(date, format_str, cal);
+}
+
+/*!
+    \since 4.5
+    \overload
+*/
 QString QLocale::toString(const QDate &date, FormatType format) const
 {
     if (!date.isValid())
@@ -2115,7 +2150,7 @@ QString QLocale::toString(const QTime &time, const QString &format) const
 #endif
 
 /*!
-    \since 5.10
+    \since 4.5
 
     Returns a localized string representation of the given \a time according
     to the specified \a format.
@@ -2146,46 +2181,39 @@ QString QLocale::toString(const QDateTime &dateTime, const QString &format) cons
 #endif
 
 /*!
-    \since 5.10
+    \since 5.14
 
     Returns a localized string representation of the given \a dateTime according
-    to the specified \a format.
+    to the specified \a format, optionally for a specified calendar \a cal.
     If \a format is an empty string, an empty string is returned.
 
     \sa QDateTime::toString(), QDate::toString(), QTime::toString()
 */
-QString QLocale::toString(const QDateTime &dateTime, QStringView format) const
+QString QLocale::toString(const QDateTime &dateTime, QStringView format, QCalendar cal) const
 {
-    return QCalendar().dateTimeToString(format, dateTime, QDate(), QTime(), *this);
+    return cal.dateTimeToString(format, dateTime, QDate(), QTime(), *this);
 }
 
-QString QLocale::toString(const QDate &date, QStringView format, QCalendar cal) const
+/*!
+    \since 5.10
+    \overload
+*/
+QString QLocale::toString(const QDateTime &dateTime, QStringView format) const
 {
-    return cal.dateTimeToString(format, QDateTime(), date, QTime(), *this);
+    return QCalendar().dateTimeToString(format, dateTime, QDate(), QTime(), *this);
 }
 
-QString QLocale::toString(const QDate &date, QLocale::FormatType format, QCalendar cal) const
-{
-    if (!date.isValid())
-        return QString();
-
-#ifndef QT_NO_SYSTEMLOCALE
-    if (cal.isGregorian() && d->m_data == systemData()) {
-        QVariant res = systemLocale()->query(format == LongFormat
-                                             ? QSystemLocale::DateToStringLong
-                                             : QSystemLocale::DateToStringShort,
-                                             date);
-        if (!res.isNull())
-            return res.toString();
-    }
-#endif
+/*!
+    \since 5.14
 
-    QString format_str = dateFormat(format);
-    return toString(date, format_str, cal);
-}
+    Returns a localized string representation of the given \a dateTime according
+    to the specified \a format (see dateTimeFormat()), optionally for a
+    specified calendar \a cal.
 
-QString QLocale::toString(const QDateTime &dateTime, QLocale::FormatType format,
-                          QCalendar cal) const
+    \note Some locales may use formats that limit the range of years they can
+    represent.
+*/
+QString QLocale::toString(const QDateTime &dateTime, FormatType format, QCalendar cal) const
 {
     if (!dateTime.isValid())
         return QString();
@@ -2205,21 +2233,10 @@ QString QLocale::toString(const QDateTime &dateTime, QLocale::FormatType format,
     return toString(dateTime, format_str, cal);
 }
 
-QString QLocale::toString(const QDateTime &dateTime, QStringView format, QCalendar cal) const
-{
-    return cal.dateTimeToString(format, dateTime, QDate(), QTime(), *this);
-}
-
 /*!
     \since 4.4
-
-    Returns a localized string representation of the given \a dateTime according
-    to the specified \a format (see dateTimeFormat()).
-
-    \note Some locales may use formats that limit the range of years they can
-    represent.
+    \overload
 */
-
 QString QLocale::toString(const QDateTime &dateTime, FormatType format) const
 {
     if (!dateTime.isValid())
diff --git a/src/corelib/text/qlocale.h b/src/corelib/text/qlocale.h
index 036f064419..19b4c3e7d6 100644
--- a/src/corelib/text/qlocale.h
+++ b/src/corelib/text/qlocale.h
@@ -1070,9 +1070,10 @@ public:
     QString toString(const QDate &date, FormatType format = LongFormat) const;
     QString toString(const QTime &time, FormatType format = LongFormat) const;
     QString toString(const QDateTime &dateTime, FormatType format = LongFormat) const;
-    /* Removing default value for `format' is done intentionally,
-     * after all tests we will remove non-calendar-aware version of these functions,
-     * and add a default value for both calendar instance, and format
+    /* We can't pass a default for QCalendar (its declaration mentions
+     * QLocale::FormatType, so it has to #include this header, which thus can't
+     * #include its, so we can't instantiate QCalendar() as default). This
+     * precludes any default for format, too.
      */
     QString toString(const QDate &date, QStringView formatStr, QCalendar cal) const;
     QString toString(const QDate &date, FormatType format, QCalendar cal) const;
-- 
2.31.1

