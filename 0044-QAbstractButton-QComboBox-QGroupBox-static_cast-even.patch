From ab3d663b5270ef406fecfc69e14aa523eaec5716 Mon Sep 17 00:00:00 2001
From: Noah Davis <noahadvs@gmail.com>
Date: Wed, 20 Apr 2022 18:20:10 -0400
Subject: [PATCH 044/144] QAbstractButton/QComboBox/QGroupBox: static_cast
 event->key() to Qt::Key

The default build settings don't like casting to the true type unless
you use static_cast.

Change-Id: I1705dd2e2339f28bbfe46832f10cb40f1aa9abd2
---
 src/widgets/widgets/qabstractbutton.cpp | 4 ++--
 src/widgets/widgets/qcombobox.cpp       | 2 +-
 src/widgets/widgets/qgroupbox.cpp       | 4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/widgets/widgets/qabstractbutton.cpp b/src/widgets/widgets/qabstractbutton.cpp
index 7be0858a58..dc40bf62fb 100644
--- a/src/widgets/widgets/qabstractbutton.cpp
+++ b/src/widgets/widgets/qabstractbutton.cpp
@@ -1078,7 +1078,7 @@ void QAbstractButton::keyPressEvent(QKeyEvent *e)
     Q_D(QAbstractButton);
     bool next = true;
 
-    const auto key = e->key();
+    const auto key = static_cast<Qt::Key>(e->key());
     const auto buttonPressKeys = QGuiApplicationPrivate::platformTheme()
                                          ->themeHint(QPlatformTheme::ButtonPressKeys)
                                          .value<QList<Qt::Key>>();
@@ -1157,7 +1157,7 @@ void QAbstractButton::keyReleaseEvent(QKeyEvent *e)
     const auto buttonPressKeys = QGuiApplicationPrivate::platformTheme()
                                          ->themeHint(QPlatformTheme::ButtonPressKeys)
                                          .value<QList<Qt::Key>>();
-    if (buttonPressKeys.contains(e->key()) && !e->isAutoRepeat() && d->down) {
+    if (buttonPressKeys.contains(static_cast<Qt::Key>(e->key())) && !e->isAutoRepeat() && d->down) {
         d->click();
         return;
     }
diff --git a/src/widgets/widgets/qcombobox.cpp b/src/widgets/widgets/qcombobox.cpp
index 6b4f69e73c..0a3d96647b 100644
--- a/src/widgets/widgets/qcombobox.cpp
+++ b/src/widgets/widgets/qcombobox.cpp
@@ -3357,7 +3357,7 @@ void QComboBox::keyPressEvent(QKeyEvent *e)
 #ifdef QT_KEYPAD_NAVIGATION
     pressLikeButton |= QApplicationPrivate::keypadNavigationEnabled() && !hasEditFocus();
 #endif
-    auto key = e->key();
+    auto key = static_cast<Qt::Key>(e->key());
     if (pressLikeButton) {
         const auto buttonPressKeys = QGuiApplicationPrivate::platformTheme()
                                              ->themeHint(QPlatformTheme::ButtonPressKeys)
diff --git a/src/widgets/widgets/qgroupbox.cpp b/src/widgets/widgets/qgroupbox.cpp
index 89a9a14743..3f3eccc370 100644
--- a/src/widgets/widgets/qgroupbox.cpp
+++ b/src/widgets/widgets/qgroupbox.cpp
@@ -365,7 +365,7 @@ bool QGroupBox::event(QEvent *e)
         const auto buttonPressKeys = QGuiApplicationPrivate::platformTheme()
                                              ->themeHint(QPlatformTheme::ButtonPressKeys)
                                              .value<QList<Qt::Key>>();
-        if (!k->isAutoRepeat() && buttonPressKeys.contains(k->key())) {
+        if (!k->isAutoRepeat() && buttonPressKeys.contains(static_cast<Qt::Key>(k->key()))) {
             d->pressedControl = QStyle::SC_GroupBoxCheckBox;
             update(style()->subControlRect(QStyle::CC_GroupBox, &box, QStyle::SC_GroupBoxCheckBox, this));
             return true;
@@ -377,7 +377,7 @@ bool QGroupBox::event(QEvent *e)
         const auto buttonPressKeys = QGuiApplicationPrivate::platformTheme()
                                              ->themeHint(QPlatformTheme::ButtonPressKeys)
                                              .value<QList<Qt::Key>>();
-        if (!k->isAutoRepeat() && buttonPressKeys.contains(k->key())) {
+        if (!k->isAutoRepeat() && buttonPressKeys.contains(static_cast<Qt::Key>(k->key()))) {
             bool toggle = (d->pressedControl == QStyle::SC_GroupBoxLabel
                            || d->pressedControl == QStyle::SC_GroupBoxCheckBox);
             d->pressedControl = QStyle::SC_None;
-- 
2.43.0

