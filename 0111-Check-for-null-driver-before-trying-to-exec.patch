From 1df669f178338a76a698fb5c1f1fa12dea7db2d2 Mon Sep 17 00:00:00 2001
From: Edward Welbourne <edward.welbourne@qt.io>
Date: Mon, 24 Jan 2022 12:44:38 +0100
Subject: [PATCH 111/144] Check for null driver() before trying to exec()

QSqlQuery::exec() took for granted that it can dereference driver(),
which should be true for all sane usage; however, it should not crash
if used misguidedly. Added regression test, based on bug report's
reproducer, which crashes without the fix.

Fixes: QTBUG-100037
Pick-to: 6.3 6.2 5.15 5.12
Change-Id: I94600bc60f89e82a1121b418144006a683921a38
Reviewed-by: Andy Shaw <andy.shaw@qt.io>
(cherry picked from commit 78eac57f3dc788345f8f3e9b6dbd3dce70b8f511)
---
 src/sql/kernel/qsqlquery.cpp                  |  6 +++-
 .../sql/kernel/qsqlquery/tst_qsqlquery.cpp    | 33 ++++++++++++++++++-
 2 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/src/sql/kernel/qsqlquery.cpp b/src/sql/kernel/qsqlquery.cpp
index 32c6166c79..60afef10c3 100644
--- a/src/sql/kernel/qsqlquery.cpp
+++ b/src/sql/kernel/qsqlquery.cpp
@@ -1,6 +1,6 @@
 /****************************************************************************
 **
-** Copyright (C) 2016 The Qt Company Ltd.
+** Copyright (C) 2022 The Qt Company Ltd.
 ** Contact: https://www.qt.io/licensing/
 **
 ** This file is part of the QtSql module of the Qt Toolkit.
@@ -377,6 +377,10 @@ bool QSqlQuery::exec(const QString& query)
     QElapsedTimer t;
     t.start();
 #endif
+    if (!driver()) {
+        qWarning("QSqlQuery::exec: called before driver has been set up");
+        return false;
+    }
     if (d->ref.loadRelaxed() != 1) {
         bool fo = isForwardOnly();
         *this = QSqlQuery(driver()->createResult());
diff --git a/tests/auto/sql/kernel/qsqlquery/tst_qsqlquery.cpp b/tests/auto/sql/kernel/qsqlquery/tst_qsqlquery.cpp
index 76df61c892..dc42b15a69 100644
--- a/tests/auto/sql/kernel/qsqlquery/tst_qsqlquery.cpp
+++ b/tests/auto/sql/kernel/qsqlquery/tst_qsqlquery.cpp
@@ -1,6 +1,6 @@
 /****************************************************************************
 **
-** Copyright (C) 2016 The Qt Company Ltd.
+** Copyright (C) 2022 The Qt Company Ltd.
 ** Contact: https://www.qt.io/licensing/
 **
 ** This file is part of the test suite of the Qt Toolkit.
@@ -68,6 +68,8 @@ private slots:
     void query_exec();
     void execErrorRecovery_data() { generic_data(); }
     void execErrorRecovery();
+    void prematureExec_data() { generic_data(); }
+    void prematureExec();
     void first_data() { generic_data(); }
     void first();
     void next_data() { generic_data(); }
@@ -2770,6 +2772,35 @@ void tst_QSqlQuery::execErrorRecovery()
     QVERIFY_SQL( q, exec() );
 }
 
+void tst_QSqlQuery::prematureExec()
+{
+    QFETCH(QString, dbName);
+    // We only want the engine name, for addDatabase():
+    int cut = dbName.indexOf(QChar('@'));
+    if (cut < 0)
+        QSKIP("Failed to parse database type out of name");
+    dbName.truncate(cut);
+    cut = dbName.indexOf(QChar('_'));
+    if (cut >= 0)
+        dbName = dbName.sliced(cut + 1);
+
+    auto db = QSqlDatabase::addDatabase(dbName);
+    QSqlQuery q(db);
+
+    QTest::ignoreMessage(QtWarningMsg,
+                         "QSqlDatabasePrivate::removeDatabase: connection "
+                         "'qt_sql_default_connection' is still in use, all "
+                         "queries will cease to work.");
+    QTest::ignoreMessage(QtWarningMsg,
+                         "QSqlDatabasePrivate::addDatabase: duplicate connection name "
+                         "'qt_sql_default_connection', old connection removed.");
+    auto otherDb = QSqlDatabase::addDatabase(dbName);
+
+    QTest::ignoreMessage(QtWarningMsg, "QSqlQuery::exec: called before driver has been set up");
+    // QTBUG-100037: shouldn't crash !
+    QVERIFY(!q.exec("select stuff from TheVoid"));
+}
+
 void tst_QSqlQuery::lastInsertId()
 {
     QFETCH( QString, dbName );
-- 
2.36.1

