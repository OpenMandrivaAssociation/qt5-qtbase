From b2a6335a759fe306f5595dbdf801fc9fd9b93c2a Mon Sep 17 00:00:00 2001
From: Timur Pocheptsov <timur.pocheptsov@qt.io>
Date: Thu, 19 Nov 2020 15:26:08 +0100
Subject: [PATCH 084/171] tst_qocsp: improve code coverage

By simply extending the basic test to trigger qHash, isEqual and
a bunch of getters.

Change-Id: Ib1d88fc6d2ad623743cea77ac286ae6ac819dfd1
Reviewed-by: Timur Pocheptsov <timur.pocheptsov@qt.io>
(cherry picked from commit 1d7189f5b3eb03e7c71fb31e2bd491d0e5a535e4)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
---
 tests/auto/network/ssl/qocsp/tst_qocsp.cpp | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/tests/auto/network/ssl/qocsp/tst_qocsp.cpp b/tests/auto/network/ssl/qocsp/tst_qocsp.cpp
index f877dcab2d..9f0b4ffb73 100644
--- a/tests/auto/network/ssl/qocsp/tst_qocsp.cpp
+++ b/tests/auto/network/ssl/qocsp/tst_qocsp.cpp
@@ -491,9 +491,9 @@ void tst_QOcsp::connectSelfSigned()
     {
         // Now the server will send a valid 'status: good' response.
         OcspServer server(subjectChain, privateKey);
-        const QByteArray response(goodResponse(subjectChain, responderChain, privateKey));
-        QVERIFY(response.size());
-        server.configureResponse(response);
+        const QByteArray responseData(goodResponse(subjectChain, responderChain, privateKey));
+        QVERIFY(responseData.size());
+        server.configureResponse(responseData);
         QVERIFY(server.listen());
 
         QSslSocket clientSocket;
@@ -502,6 +502,19 @@ void tst_QOcsp::connectSelfSigned()
         loop.enterLoopMSecs(handshakeTimeoutMS);
 
         QVERIFY_HANDSHAKE_WITHOUT_ERRORS(clientSocket);
+
+        const auto responses = clientSocket.ocspResponses();
+        QCOMPARE(responses.size(), 1);
+        const auto &response = responses.at(0);
+        QVERIFY(response != QOcspResponse());
+        const auto copy = response;
+        QCOMPARE(copy, response);
+        QVERIFY(qHash(response, 0) != 0);
+
+        QCOMPARE(response.revocationReason(), QOcspRevocationReason::None);
+        QCOMPARE(response.certificateStatus(), QOcspCertificateStatus::Good);
+        QCOMPARE(response.subject(), clientSocket.peerCertificate());
+        QCOMPARE(response.responder(), clientSocket.peerCertificate());
     }
 }
 
-- 
2.31.1

