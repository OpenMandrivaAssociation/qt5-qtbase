From 62f86b9b7ab3421c7a74c4c05a186847c76bfb28 Mon Sep 17 00:00:00 2001
From: Volker Hilsheimer <volker.hilsheimer@qt.io>
Date: Wed, 21 Oct 2020 17:39:42 +0200
Subject: [PATCH 022/171] Don't show QPushButton as hovered unless the mouse is
 within the bevel

Previous fixes made QPushButton correctly respect the style sheet boxing
model (as it's documented to do), ignoring clicks that were within the
margin area of the button (ie outside the bevel). However, a hover state
selector in the style sheet would still be used for the entire widget.

Turn on mouse tracking for widgets that have a hover state selector, and
handle MouseMove events to set an explicit hovered state only when the
mouse hits the button. Use that state to initialize the style option if
mouseTracking is on, otherwise no change of behavior.

Fixes: QTBUG-87706
Change-Id: I2f423b760c85cfab9faac4be44a5c7dcf2ba1c23
Reviewed-by: Richard Moe Gustavsen <richard.gustavsen@qt.io>
Reviewed-by: Doris Verria <doris.verria@qt.io>
(adapted from 3310e13a17d2249a86fa533e350744c5593be54f by including
fd8e6a203ecfeebc03772b3bce14c91a6fc0a8e1)
---
 src/widgets/styles/qstylesheetstyle.cpp |  1 +
 src/widgets/widgets/qpushbutton.cpp     | 14 ++++++++++++++
 src/widgets/widgets/qpushbutton_p.h     |  5 ++++-
 3 files changed, 19 insertions(+), 1 deletion(-)

diff --git a/src/widgets/styles/qstylesheetstyle.cpp b/src/widgets/styles/qstylesheetstyle.cpp
index 14bca7fbe4..ae5d14ab9c 100644
--- a/src/widgets/styles/qstylesheetstyle.cpp
+++ b/src/widgets/styles/qstylesheetstyle.cpp
@@ -2848,6 +2848,7 @@ void QStyleSheetStyle::polish(QWidget *w)
         if ( cssClass & PseudoClass_Hover || negated & PseudoClass_Hover) {
             w->setAttribute(Qt::WA_Hover);
             embeddedWidget(w)->setAttribute(Qt::WA_Hover);
+            embeddedWidget(w)->setMouseTracking(true);
         }
     }
 
diff --git a/src/widgets/widgets/qpushbutton.cpp b/src/widgets/widgets/qpushbutton.cpp
index 3d075bf92f..d182d7d33d 100644
--- a/src/widgets/widgets/qpushbutton.cpp
+++ b/src/widgets/widgets/qpushbutton.cpp
@@ -332,6 +332,8 @@ void QPushButton::initStyleOption(QStyleOptionButton *option) const
         option->state |= QStyle::State_On;
     if (!d->flat && !d->down)
         option->state |= QStyle::State_Raised;
+    if (underMouse() && hasMouseTracking())
+        option->state.setFlag(QStyle::State_MouseOver, d->hovering);
     option->text = d->text;
     option->icon = d->icon;
     option->iconSize = iconSize();
@@ -691,6 +693,18 @@ bool QPushButton::event(QEvent *e)
         updateGeometry();
     } else if (e->type() == QEvent::PolishRequest) {
         updateGeometry();
+    } else if (e->type() == QEvent::MouseMove) {
+        const QMouseEvent *mouseEvent = static_cast<QMouseEvent *>(e);
+        if (testAttribute(Qt::WA_Hover)) {
+            bool hit = false;
+            if (underMouse())
+                hit = hitButton(mouseEvent->pos());
+
+            if (hit != d->hovering) {
+                update(rect());
+                d->hovering = hit;
+            }
+        }
     }
     return QAbstractButton::event(e);
 }
diff --git a/src/widgets/widgets/qpushbutton_p.h b/src/widgets/widgets/qpushbutton_p.h
index 439b6e35d6..7a5458ea3b 100644
--- a/src/widgets/widgets/qpushbutton_p.h
+++ b/src/widgets/widgets/qpushbutton_p.h
@@ -69,7 +69,9 @@ public:
 
     QPushButtonPrivate()
         : QAbstractButtonPrivate(QSizePolicy::PushButton), autoDefault(Auto),
-          defaultButton(false), flat(false), menuOpen(false), lastAutoDefault(false) {}
+          defaultButton(false), flat(false), menuOpen(false), hovering(false),
+          lastAutoDefault(false)
+    {}
 
     inline void init() { resetLayoutItemMargins(); }
     static QPushButtonPrivate* get(QPushButton *b) { return b->d_func(); }
@@ -89,6 +91,7 @@ public:
     uint defaultButton : 1;
     uint flat : 1;
     uint menuOpen : 1;
+    uint hovering : 1;
     mutable uint lastAutoDefault : 1;
 };
 
-- 
2.31.1

