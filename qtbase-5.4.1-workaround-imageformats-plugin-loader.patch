--- qtbase-opensource-src-5.4.1/src/gui/image/qimagereader.cpp.omv~	2015-03-13 17:25:41.562514661 +0100
+++ qtbase-opensource-src-5.4.1/src/gui/image/qimagereader.cpp	2015-03-13 17:26:12.287373120 +0100
@@ -161,8 +161,10 @@
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-Q_GLOBAL_STATIC_WITH_ARGS(QFactoryLoader, loader,
-                          (QImageIOHandlerFactoryInterface_iid, QLatin1String("/imageformats")))
+// FIXME see comment in qimagewriter.cpp
+//Q_GLOBAL_STATIC_WITH_ARGS(QFactoryLoader, loader,
+//                          (QImageIOHandlerFactoryInterface_iid, QLatin1String("/imageformats")))
+QFactoryLoader qt5_imageformatFactoryLoader(QImageIOHandlerFactoryInterface_iid, QLatin1String("/imageformats"));
 #endif
 
 enum _qt_BuiltInFormatType {
@@ -247,7 +249,7 @@ static QImageIOHandler *createReadHandle
     typedef QMultiMap<int, QString> PluginKeyMap;
 
     // check if we have plugins that support the image format
-    QFactoryLoader *l = loader();
+    QFactoryLoader *l = &qt5_imageformatFactoryLoader;
     const PluginKeyMap keyMap = l->keyMap();
 
 #ifdef QIMAGEREADER_DEBUG
@@ -1530,7 +1532,7 @@ QList<QByteArray> QImageReader::supporte
         formats << _qt_BuiltInFormats[i].extension;
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-    supportedImageHandlerFormats(loader(), QImageIOPlugin::CanRead, &formats);
+    supportedImageHandlerFormats(&qt5_imageformatFactoryLoader, QImageIOPlugin::CanRead, &formats);
 #endif // QT_NO_IMAGEFORMATPLUGIN
 
     std::sort(formats.begin(), formats.end());
@@ -1554,7 +1556,7 @@ QList<QByteArray> QImageReader::supporte
         mimeTypes << _qt_BuiltInFormats[i].mimeType;
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-    supportedImageHandlerMimeTypes(loader(), QImageIOPlugin::CanRead, &mimeTypes);
+    supportedImageHandlerMimeTypes(&qt5_imageformatFactoryLoader, QImageIOPlugin::CanRead, &mimeTypes);
 #endif // QT_NO_IMAGEFORMATPLUGIN
 
     std::sort(mimeTypes.begin(), mimeTypes.end());
--- qtbase-opensource-src-5.4.1/src/gui/image/qimagewriter.cpp.omv~	2015-03-13 17:23:35.740021610 +0100
+++ qtbase-opensource-src-5.4.1/src/gui/image/qimagewriter.cpp	2015-03-13 17:25:37.959530839 +0100
@@ -120,8 +120,12 @@
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-Q_GLOBAL_STATIC_WITH_ARGS(QFactoryLoader, loader,
-                          (QImageIOHandlerFactoryInterface_iid, QLatin1String("/imageformats")))
+// FIXME for some reason (probably duplicate loading from qimagereader.cpp?),
+// this doesn't work on cooker as of Mar 13, 2015 -- but a crude hack doing
+// mostly the same thing does.
+//Q_GLOBAL_STATIC_WITH_ARGS(QFactoryLoader, loader,
+//                          (QImageIOHandlerFactoryInterface_iid, QLatin1String("/imageformats")))
+extern QFactoryLoader qt5_imageformatFactoryLoader;
 #endif
 
 static QImageIOHandler *createWriteHandlerHelper(QIODevice *device,
@@ -135,7 +139,7 @@ static QImageIOHandler *createWriteHandl
     typedef QMultiMap<int, QString> PluginKeyMap;
 
     // check if any plugins can write the image
-    QFactoryLoader *l = loader();
+    QFactoryLoader *l = &qt5_imageformatFactoryLoader;
     const PluginKeyMap keyMap = l->keyMap();
     int suffixPluginIndex = -1;
 #endif
@@ -807,7 +811,7 @@ QList<QByteArray> QImageWriter::supporte
 #endif
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-    supportedImageHandlerFormats(loader(), QImageIOPlugin::CanWrite, &formats);
+    supportedImageHandlerFormats(&qt5_imageformatFactoryLoader, QImageIOPlugin::CanWrite, &formats);
 #endif // QT_NO_IMAGEFORMATPLUGIN
 
     std::sort(formats.begin(), formats.end());
@@ -848,7 +852,7 @@ QList<QByteArray> QImageWriter::supporte
 #endif
 
 #ifndef QT_NO_IMAGEFORMATPLUGIN
-    supportedImageHandlerMimeTypes(loader(), QImageIOPlugin::CanWrite, &mimeTypes);
+    supportedImageHandlerMimeTypes(&qt5_imageformatFactoryLoader, QImageIOPlugin::CanWrite, &mimeTypes);
 #endif // QT_NO_IMAGEFORMATPLUGIN
 
     std::sort(mimeTypes.begin(), mimeTypes.end());
