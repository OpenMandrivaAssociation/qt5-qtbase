From 54d0cb180b0fddef3b42d3c571ad78fb643de0ea Mon Sep 17 00:00:00 2001
From: Marc Mutz <marc.mutz@qt.io>
Date: Fri, 13 May 2022 18:21:01 +0200
Subject: [PATCH 042/129] QReadWriteLock: fix another data race in
 stateForWaitCondition()

The writerCount member variable is only ever accessed under
Private::mutex protection, so we need to lock the mutex here, too.

Pick-to: 6.3 6.2 5.15
Change-Id: I1717e5282eed2ecc14ccdc5090b9fc41174cccc8
Reviewed-by: Thiago Macieira <thiago.macieira@intel.com>
(cherry picked from commit 0ca2cf42e0de422634f13fb6a5e5a9d7560b323b)
---
 src/corelib/thread/qreadwritelock.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/corelib/thread/qreadwritelock.cpp b/src/corelib/thread/qreadwritelock.cpp
index 63637ae05b..9dd8503116 100644
--- a/src/corelib/thread/qreadwritelock.cpp
+++ b/src/corelib/thread/qreadwritelock.cpp
@@ -453,6 +453,7 @@ QReadWriteLock::StateForWaitCondition QReadWriteLock::stateForWaitCondition() co
 
     if (!d)
         return Unlocked;
+    const auto lock = qt_scoped_lock(d->mutex);
     if (d->writerCount > 1)
         return RecursivelyLocked;
     else if (d->writerCount == 1)
-- 
2.41.0.rc2

